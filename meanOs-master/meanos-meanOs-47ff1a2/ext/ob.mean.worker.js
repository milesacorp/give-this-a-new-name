self.meanOs={ipfs:null,uuId:null,gun:null,gunUser:null,pub:null,gunAdmin:null,gunAdminUser:null,ipfsDone:null,reqInfo:null,clientId:null,client:null,meanOsPlugins:[],gunPubKey:"rx5kqo4fNEdlbo5hjhSprpT2mX4LCAJ1W47-K0Ol7vo.6qQ5ZKwJ0FD-QE6kZbwjDjNVrZGu3aegRLNmvbJR82M",IPFSGateway:"https://gateway.ipfs.io",consoleLog:function(e){console.log("ðŸ‘½: "+e)}},self.importScripts("https://mean.Æ¡s.com/os/utils/ob.mean.fetch.js","https://mean.Æ¡s.com/os/utils/ob.mean.cache.js","https://mean.Æ¡s.com/os/utils/ob.mean.ipfs.js"),self.meanOs.consoleLog("meanOsPlugins.length:"+self.meanOs.meanOsPlugins.length),self.activeFetches={};let decrementActiveFetches=()=>{self.activeFetches[self.meanOs.clientId]--,self.meanOs.consoleLog("> activeFetches["+self.meanOs.clientId+"]:"+self.activeFetches[self.meanOs.clientId]),0===self.activeFetches[self.meanOs.clientId]&&(self.meanOs.consoleLog("All fetches done!"),self.meanOs.client?self.meanOs.client.postMessage({allFetched:!0,uuId:self.meanOs.uuId}):clients.get(self.meanOs.clientId).then(e=>{self.meanOs.client=e,self.meanOs.client.postMessage({allFetched:!0,uuId:self.meanOs.uuId})}).then(()=>{self.meanOs.consoleLog("all-fetched message sent.")}))},meanOsResourceInfo=class{values={url:"",fetchError:null,method:null,state:null,serviceWorker:"meanWorker.2.1"};client=null;constructor(e){this.values.url=e,self.meanOs.client?self.meanOs.client.postMessage(this.values):self.meanOs.clientId&&clients.get(self.meanOs.clientId).then(e=>{self.meanOs.client=e,self.meanOs.client.postMessage(this.values)})}update(e){var s="(meanWorker.2.1) Updated meanOsResourceInfo for: "+this.values.url,n=!1;Object.keys(e).filter(e=>["fetchError","method","state"].includes(e)).forEach(t=>{s+="> "+t+": "+e[t],this.values[t]!==e[t]&&(s+=" (changed!)",n=!0),this.values[t]=e[t]}),console.log(s),self.meanOs.client&&n&&self.meanOs.client.postMessage(this.values)}get fetchError(){return this.values.fetchError}get method(){return this.values.method}get state(){return this.values.state}get serviceWorker(){return this.values.serviceWorker}get url(){return this.values.url}get clientId(){return this.values.clientId}},getmeanOsPluginByName=e=>{for(i=0;i<self.meanOs.meanOsPlugins.length;i++)if(self.meanOs.meanOsPlugins[i].name===e)return self.meanOs.meanOsPlugins[i];return null},meanOsFetch=(e,s,n)=>(n.update({method:e.name,state:"running"}),console.log("(meanWorker.2.1) handling URL:"+s+" > current method : "+e.name),e.fetch(s)),callOnmeanOsPlugin=(e,s)=>{for(i=0;i<self.meanOs.meanOsPlugins.length;i++)if("function"==typeof self.meanOs.meanOsPlugins[i][e])return self.meanOs.consoleLog("Calling plugin "+self.meanOs.meanOsPlugins[i].name+"."+e+"()"),self.meanOs.meanOsPlugins[i][e].apply(null,s)},getResourceThroughmeanOs=(e,s,n=!0,t=!0,l=null)=>{var a=e.url.replace(/#.+$/,""),o=new meanOsResourceInfo(a);self.activeFetches[self.meanOs.clientId]++;var r=self.meanOs.meanOsPlugins.filter(e=>n||"function"!=typeof e.stash);return r.slice(1).reduce((e,s)=>e.catch(e=>(self.meanOs.consoleLog("(meanWorker.2.1) meanOs plugin error for:"+a+" > method : "+o.method+" > error: "+e.toString()),o.update({state:"error",fetchError:e.toString()}),meanOsFetch(s,a,o))),meanOsFetch(r[0],a,o)).then(s=>{if(decrementActiveFetches(self.meanOs.clientId),o.update({state:"success"}),plugin=getmeanOsPluginByName(o.method),"function"==typeof plugin.stash)return self.meanOs.consoleLog("Not stashing, since resource is already retrieved by a stashing plugin:"+a),self.meanOs.consoleLog("starting background no-stashed fetch for:"+a),getResourceThroughmeanOs(e,self.meanOs.clientId,!1,!0,s.clone()),s;if(l&&l.headers&&(self.meanOs.consoleLog("checking freshness of stashed version of:"+a+" > stashed from :"+l.headers.get("X-meanOs-Method")+" > fetched using:"+o.method+" > stashed X-meanOs-ETag :"+l.headers.get("X-meanOs-ETag")+" > fetched X-meanOs-ETag :"+s.headers.get("X-meanOs-ETag")),l.headers.get("X-meanOs-Method")===o.method&&l.headers.get("X-meanOs-ETag")===s.headers.get("X-meanOs-ETag")||(self.meanOs.consoleLog("fetched version method or ETag differs from stashed for:"+a),self.meanOs.client?self.meanOs.client.postMessage({url:a,fetchedDiffers:!0}):clients.get(self.meanOs.clientId).then(e=>{self.meanOs.client=e,e.postMessage({url:a,fetchedDiffers:!0})}))),t)for(i=0;i<self.meanOs.meanOsPlugins.length;i++)if("function"==typeof self.meanOs.meanOsPlugins[i].stash)return console.log("Stashing a successful fetch of:"+a+"> fetched using:"+o.method,"> stashing using:"+self.meanOs.meanOsPlugins[i].name),self.meanOs.meanOsPlugins[i].stash(s.clone(),a).then(e=>s);return s}).catch(e=>{throw self.meanOs.consoleLog("(meanWorker.2.1) meanOs also failed completely: "+e+"> URL: "+a),o.update({state:"error",fetchError:e.toString()}),o.update({method:null}),decrementActiveFetches(),e})};self.addEventListener("install",e=>{e.waitUntil(self.skipWaiting()),self.meanOs.consoleLog("0. Installed Inter-Planetary Shotgun (commit: meanWorker.2.1).")}),self.addEventListener("activate",e=>{e.waitUntil(self.clients.claim()),self.meanOs.consoleLog("1. Activated Inter-Planetary Shotgun (commit: meanWorker.2.1).")}),self.addEventListener("fetch",e=>{self.meanOs.clientId=e.clientId,e.resultingClientId&&(self.meanOs.clientId=e.resultingClientId,self.meanOs.client?self.meanOs.client.postMessage({clientId:self.meanOs.clientId,uuId:self.meanOs.uuId,ipfsDone:self.meanOs.ipfsDone,plugins:self.meanOs.meanOsPlugins.map(e=>e.name),serviceWorker:"meanWorker.2.1"}):clients.get(self.meanOs.clientId).then(e=>{void 0!==e&&(self.meanOs.client=e,e.postMessage({clientId:self.meanOs.clientId,uuId:self.meanOs.uuId,ipfsDone:self.meanOs.ipfsDone,plugins:self.meanOs.meanOsPlugins.map(e=>e.name),serviceWorker:"meanWorker.2.1"}))})),"number"!=typeof self.activeFetches[self.meanOs.clientId]&&(self.activeFetches[self.meanOs.clientId]=0),e.request.url.startsWith(self.location.origin)&&"GET"===e.request.method?e.respondWith(getResourceThroughmeanOs(e.request,self.meanOs.clientId)):e.respondWith(fetch(e.request))}),self.addEventListener("message",e=>{var s="(meanWorker.2.1) Message received!";if(Object.keys(e.data).forEach(n=>{s+="> key: "+n+" > val: "+e.data[n]}),self.meanOs.consoleLog(s),e.data.stash&&callOnmeanOsPlugin("stash",e.data.stash),e.data.unstash&&callOnmeanOsPlugin("unstash",e.data.unstash),e.data.publish&&callOnmeanOsPlugin("publish",e.data.publish),e.data.uuId){if(self.meanOs.uuId)return;self.meanOs.uuId=e.data.uuId,callOnmeanOsPlugin("uuId",e.data.uuId)}});